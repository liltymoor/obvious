in_source: |-
  biggest_p = 0
  a = 999

  while (a > 99) {
      b = 999
      while (b > 99) {
          num = a * b

          if (num < biggest_p) {
              b = 1
          }

          original = num
          reversed_num = 0
          temp = num
          while (temp > 0) {
              digit = temp % 10
              reversed_num = reversed_num * 10 + digit
              temp = temp / 10
          }

          if (original == reversed_num) {
              if (original > biggest_p) {
                  biggest_p = original
              }
              b = 1
          }

          b = b - 1
      }
      a = a - 1
  }

  echo(biggest_p)
in_stdin: |-
  []
out_log: |-
  TICK:  3852732 | Command: Opcode.ST     | PC:    6 | CR: 0x11000002      ACC: 0x63       | DR: 0x1        | AR: 0x1000001  FLAGS: (False, False)
  TICK:  3852735 | Command: Opcode.LD     | PC:    7 | CR: 0xb000001       ACC: 0x63       | DR: 0x63       | AR: 0x1000001  FLAGS: (False, False)
  TICK:  3852738 | Command: Opcode.CMP    | PC:    8 | CR: 0x63000002      ACC: 0x63       | DR: 0x63       | AR: 0x1000002  FLAGS: (False, False)
  TICK:  3852740 | Command: Opcode.SETG   | PC:    9 | CR: 0x68000000      ACC: 0x63       | DR: 0x63       | AR: 0x1000002  FLAGS: (False, True)
  TICK:  3852742 | Command: Opcode.JZ     | PC:   10 | CR: 0x88000050      ACC: 0x0        | DR: 0x63       | AR: 0x1000002  FLAGS: (False, True)
  TICK:  3852745 | Command: Opcode.LD     | PC:   81 | CR: 0xb000000       ACC: 0x0        | DR: 0xdd571    | AR: 0x1000000  FLAGS: (False, True)
  TICK:  3852747 | Command: Opcode.OUT    | PC:   82 | CR: 0xa8000000      ACC: 0xdd571    | DR: 0xdd571    | AR: 0x1000000  FLAGS: (False, False)
  TICK:  3852749 | Command: Opcode.HALT   | PC:   83 | CR: 0x98000000      ACC: 0xdd571    | DR: 0xdd571    | AR: 0x1000000  FLAGS: (False, False)
  Output format (TICK, DECODED TO INT OUT)
  3852747 0xdd571
out_stdout: |
  LoC: 33
  Instructions: 83
  ============================================================
  Total ticks: 3852749
out_code_hex: |
  0x0  - 0x8000000   - LD    0x0        | [IMMEDIATE]
  0x4  - 0x11000000  - ST    0x4000000  | [IMMEDIATE]
  0x8  - 0x80003e7   - LD    0xf9c      | [IMMEDIATE]
  0xc  - 0x11000001  - ST    0x4000004  | [IMMEDIATE]
  0x10 - 0x8000063   - LD    0x18c      | [IMMEDIATE]
  0x14 - 0x11000002  - ST    0x4000008  | [IMMEDIATE]
  0x18 - 0xb000001   - LD    0x4000004  | [DIRECT]
  0x1c - 0x63000002  - CMP   0x4000008  | [DIRECT]
  0x20 - 0x6a000000  - SETG             | [DIRECT]
  0x24 - 0x88000050  - JZ    0x140      | [IMMEDIATE]
  0x28 - 0x80003e7   - LD    0xf9c      | [IMMEDIATE]
  0x2c - 0x11000003  - ST    0x400000c  | [IMMEDIATE]
  0x30 - 0x8000063   - LD    0x18c      | [IMMEDIATE]
  0x34 - 0x11000004  - ST    0x4000010  | [IMMEDIATE]
  0x38 - 0xb000003   - LD    0x400000c  | [DIRECT]
  0x3c - 0x63000004  - CMP   0x4000010  | [DIRECT]
  0x40 - 0x6a000000  - SETG             | [DIRECT]
  0x44 - 0x8800004a  - JZ    0x128      | [IMMEDIATE]
  0x48 - 0xb000001   - LD    0x4000004  | [DIRECT]
  0x4c - 0x2b000003  - MUL   0x400000c  | [DIRECT]
  0x50 - 0x11000005  - ST    0x4000014  | [IMMEDIATE]
  0x54 - 0xb000005   - LD    0x4000014  | [DIRECT]
  0x58 - 0x63000000  - CMP   0x4000000  | [DIRECT]
  0x5c - 0x7a000000  - SETL             | [DIRECT]
  0x60 - 0x8800001b  - JZ    0x6c       | [IMMEDIATE]
  0x64 - 0x8000001   - LD    0x4        | [IMMEDIATE]
  0x68 - 0x11000003  - ST    0x400000c  | [IMMEDIATE]
  0x6c - 0xb000005   - LD    0x4000014  | [DIRECT]
  0x70 - 0x11000006  - ST    0x4000018  | [IMMEDIATE]
  0x74 - 0x8000000   - LD    0x0        | [IMMEDIATE]
  0x78 - 0x11000007  - ST    0x400001c  | [IMMEDIATE]
  0x7c - 0xb000005   - LD    0x4000014  | [DIRECT]
  0x80 - 0x11000008  - ST    0x4000020  | [IMMEDIATE]
  0x84 - 0x8000000   - LD    0x0        | [IMMEDIATE]
  0x88 - 0x11000009  - ST    0x4000024  | [IMMEDIATE]
  0x8c - 0xb000008   - LD    0x4000020  | [DIRECT]
  0x90 - 0x63000009  - CMP   0x4000024  | [DIRECT]
  0x94 - 0x6a000000  - SETG             | [DIRECT]
  0x98 - 0x88000038  - JZ    0xe0       | [IMMEDIATE]
  0x9c - 0x800000a   - LD    0x28       | [IMMEDIATE]
  0xa0 - 0x1100000a  - ST    0x4000028  | [IMMEDIATE]
  0xa4 - 0xb000008   - LD    0x4000020  | [DIRECT]
  0xa8 - 0x3b00000a  - MOD   0x4000028  | [DIRECT]
  0xac - 0x1100000b  - ST    0x400002c  | [IMMEDIATE]
  0xb0 - 0x800000a   - LD    0x28       | [IMMEDIATE]
  0xb4 - 0x1100000c  - ST    0x4000030  | [IMMEDIATE]
  0xb8 - 0xb000007   - LD    0x400001c  | [DIRECT]
  0xbc - 0x2b00000c  - MUL   0x4000030  | [DIRECT]
  0xc0 - 0x1b00000b  - ADD   0x400002c  | [DIRECT]
  0xc4 - 0x11000007  - ST    0x400001c  | [IMMEDIATE]
  0xc8 - 0x800000a   - LD    0x28       | [IMMEDIATE]
  0xcc - 0x1100000d  - ST    0x4000034  | [IMMEDIATE]
  0xd0 - 0xb000008   - LD    0x4000020  | [DIRECT]
  0xd4 - 0x3300000d  - DIV   0x4000034  | [DIRECT]
  0xd8 - 0x11000008  - ST    0x4000020  | [IMMEDIATE]
  0xdc - 0x80000021  - JMP   0x84       | [IMMEDIATE]
  0xe0 - 0xb000006   - LD    0x4000018  | [DIRECT]
  0xe4 - 0x63000007  - CMP   0x400001c  | [DIRECT]
  0xe8 - 0x72000000  - SETE             | [DIRECT]
  0xec - 0x88000044  - JZ    0x110      | [IMMEDIATE]
  0xf0 - 0xb000006   - LD    0x4000018  | [DIRECT]
  0xf4 - 0x63000000  - CMP   0x4000000  | [DIRECT]
  0xf8 - 0x6a000000  - SETG             | [DIRECT]
  0xfc - 0x88000042  - JZ    0x108      | [IMMEDIATE]
  0x100 - 0xb000006   - LD    0x4000018  | [DIRECT]
  0x104 - 0x11000000  - ST    0x4000000  | [IMMEDIATE]
  0x108 - 0x8000001   - LD    0x4        | [IMMEDIATE]
  0x10c - 0x11000003  - ST    0x400000c  | [IMMEDIATE]
  0x110 - 0x8000001   - LD    0x4        | [IMMEDIATE]
  0x114 - 0x1100000e  - ST    0x4000038  | [IMMEDIATE]
  0x118 - 0xb000003   - LD    0x400000c  | [DIRECT]
  0x11c - 0x2300000e  - SUB   0x4000038  | [DIRECT]
  0x120 - 0x11000003  - ST    0x400000c  | [IMMEDIATE]
  0x124 - 0x8000000c  - JMP   0x30       | [IMMEDIATE]
  0x128 - 0x8000001   - LD    0x4        | [IMMEDIATE]
  0x12c - 0x1100000f  - ST    0x400003c  | [IMMEDIATE]
  0x130 - 0xb000001   - LD    0x4000004  | [DIRECT]
  0x134 - 0x2300000f  - SUB   0x400003c  | [DIRECT]
  0x138 - 0x11000001  - ST    0x4000004  | [IMMEDIATE]
  0x13c - 0x80000004  - JMP   0x10       | [IMMEDIATE]
  0x140 - 0xb000000   - LD    0x4000000  | [DIRECT]
  0x144 - 0xa8000000  - OUT              | [IMMEDIATE]
  0x148 - 0x98000000  - HALT             | [IMMEDIATE]
out_code_bin: !!binary |
  AAEAAQAAAAACAAEAAAABAQAB5wMAAAIAAQEAAAEBAAFjAAAAAgABAgAAAQEBAQEAAAEMAQECAAAB
  DQEAEQABUAAAAAEAAecDAAACAAEDAAABAQABYwAAAAIAAQQAAAEBAQEDAAABDAEBBAAAAQ0BABEA
  AUoAAAABAQEBAAABBQEBAwAAAQIAAQUAAAEBAQEFAAABDAEBAAAAAQ8BABEAARsAAAABAAEBAAAA
  AgABAwAAAQEBAQUAAAECAAEGAAABAQABAAAAAAIAAQcAAAEBAQEFAAABAgABCAAAAQEAAQAAAAAC
  AAEJAAABAQEBCAAAAQwBAQkAAAENAQARAAE4AAAAAQABCgAAAAIAAQoAAAEBAQEIAAABBwEBCgAA
  AQIAAQsAAAEBAAEKAAAAAgABDAAAAQEBAQcAAAEFAQEMAAABAwEBCwAAAQIAAQcAAAEBAAEKAAAA
  AgABDQAAAQEBAQgAAAEGAQENAAABAgABCAAAARAAASEAAAABAQEGAAABDAEBBwAAAQ4BABEAAUQA
  AAABAQEGAAABDAEBAAAAAQ0BABEAAUIAAAABAQEGAAABAgABAAAAAQEAAQEAAAACAAEDAAABAQAB
  AQAAAAIAAQ4AAAEBAQEDAAABBAEBDgAAAQIAAQMAAAEQAAEMAAAAAQABAQAAAAIAAQ8AAAEBAQEB
  AAABBAEBDwAAAQIAAQEAAAEQAAEEAAAAAQEBAAAAARUAABMAAA==
